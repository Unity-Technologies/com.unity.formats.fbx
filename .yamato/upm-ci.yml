{% metadata_file .yamato/global.metafile %}
---

pack:
  name: Pack
  agent:
    type: {{ ubuntu_platform.type }}
    image: {{ ubuntu_platform.image }}
    flavor: {{ ubuntu_platform.flavor }}
  commands:
    - sudo apt-get -y install cmake
    - ./build.sh
    - npm install -g upm-ci-utils@stable --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
    - upm-ci package pack --package-path com.unity.formats.fbx
  artifacts:
   packages:
     paths:
       - "upm-ci~/**/*"

# The following job runs PVP API docs validation to validate all public APIs (classes and methods) have documentation.
# For APIs which are exempted from API docs validartion, they are put in pvp_exemptions.json
api_doc_validation:
  name: API documentation validation
  agent:
    type: {{ ubuntu_platform.type }}
    image: {{ ubuntu_platform.image }}
    flavor: {{ ubuntu_platform.flavor }}
  variables:
    UPM_REGISTRY: https://artifactory-slo.bf.unity3d.com/artifactory/api/npm/upm-candidates
  commands:
    # Needed for now, until we get a recent upm-pvp into the image.
    - sudo apt-get update && sudo apt-get install -y upm-pvp
    # Download Unity.
    - unity-downloader-cli --fast --wait -u {{ all_test_editors[0].version }} -c editor
    # Run PVS in PVP mode.
    - upm-pvp test --unity .Editor --packages "upm-ci~/packages/*.tgz" --results "upm-ci~/pvp"
    # Require that PVP-20-1 (API docs validation) passed
    - upm-pvp require PVP-20-1 --results "upm-ci~/pvp" --failures "upm-ci~/pvp/failures.json"
  artifacts:
    pvp:
      paths:
        - upm-ci~/pvp/**
    logs:
      paths:
        - upm-ci~/test-results/**
  dependencies:
    - .yamato/upm-ci.yml#pack


{% for editor in all_test_editors %}
{% for platform in platforms %}
test_{{ platform.name }}_{{ editor.version }}:
  name : Test version {{ editor.version }} on {{ platform.name }}
  agent:
    type: {{ platform.type }}
    image: {{ platform.image }}
    flavor: {{ platform.flavor}}
  variables:
    UPMCI_ENABLE_APV_CLEAN_CONSOLE_TEST: 1
  commands:
    - npm install -g upm-ci-utils@stable --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
{% if platform.name == "ubuntu" %}
    - sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
    - sudo apt-get -y install gcc-9 g++-9
    - CC=`which gcc-9` CXX=`which g++-9` upm-ci package test --extra-create-project-arg="-upmNoDefaultPackages" --unity-version {{ editor.version }} --package-path com.unity.formats.fbx --enable-code-coverage --code-coverage-options 'generateHtmlReport;assemblyFilters:+Unity.Formats.Fbx.Editor,+Unity.Formats.Fbx.Runtime'
{% else %}
    - upm-ci package test --extra-create-project-arg="-upmNoDefaultPackages" --unity-version {{ editor.version }} --package-path com.unity.formats.fbx --enable-code-coverage --code-coverage-options 'generateHtmlReport;assemblyFilters:+Unity.Formats.Fbx.Editor,+Unity.Formats.Fbx.Runtime'
{% endif %}
    - python tests/yamato/check_coverage_percent.py upm-ci~/test-results/ {{ coverage.minPercent }}
  artifacts:
    logs:
      paths:
        - "upm-ci~/test-results/**/*"
    packages:
      paths:
        - "upm-ci~/packages/**/*"
  dependencies:
    - .yamato/upm-ci.yml#pack

validate_{{ platform.name }}_{{ editor.version }}:
  name : Validate version {{ editor.version }} on {{ platform.name }}
  agent:
    type: {{ platform.type }}
    image: {{ platform.image }}
    flavor: {{ platform.flavor}}
  variables:
    UPMCI_ENABLE_APV_CLEAN_CONSOLE_TEST: 1
  commands:
    - npm install -g upm-ci-utils@stable --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
    - upm-ci package test --unity-version {{ editor.version }} --type vetting-tests --platform editmode --package-path com.unity.formats.fbx
  artifacts:
    logs:
      paths:
        - "upm-ci~/test-results/**/*"
    packages:
      paths:
        - "upm-ci~/packages/**/*"
  dependencies:
    - .yamato/upm-ci.yml#pack
{% endfor %}
{% endfor %}

# The following job runs the tests to validate the the public API files are up to date.
# We can't use upm-ci for those as it would pack fbx, making its files read-only, but those
# tests need read/write access.
test_api_win:
  name : Test formating and API on win
  agent:
    type: {{ win_platform.type }}
    image: {{ win_platform.image }}
    flavor: {{ win_platform.flavor }}
  commands:
    - git clone git@github.cds.internal.unity3d.com:unity/utr.git utr
    - gsudo choco source add -n Unity -s https://artifactory.prd.it.unity3d.com/artifactory/api/nuget/unity-choco-local
    - gsudo choco install unity-config
    - unity-config project set registry candidates --project-path TestProjects/fbx-api-tests
    - unity-downloader-cli -u {{ all_test_editors[2].version }} -c Editor
    - utr/utr.bat --suite=editor --editor-location=.Editor --testproject=TestProjects/fbx-api-tests --artifacts_path=artifacts --reruncount=0
  artifacts:
    logs:
      paths:
      - "upm-ci~/test-results/**/*"

test_trigger_pr:
  name: Pull Request Tests Trigger
  triggers:
    cancel_old_ci: true
    expression: pull_request.(source match ".*" AND NOT draft)
  dependencies:
    - .yamato/upm-ci.yml#pack
    - .yamato/upm-ci.yml#api_doc_validation
    - .yamato/upm-ci.yml#test_api_win
{% for editor in all_test_editors %}
{% for platform in platforms %}
# If use_autodesk_fbx_submodule_for_testing is set, com.unity.formats.fbx package will test against com.autodesk.fbx repo instead of published package.
{% if use_autodesk_fbx_submodule_for_testing %}
    - .yamato/package-test-utr.yml#test_{{ platform.name }}_{{ editor.version }}_using_autodesk_fbx_submodule
{% else %}
    - .yamato/upm-ci.yml#test_{{ platform.name }}_{{ editor.version }}
{% endif %}
{% endfor %}
{% endfor %}
# Only run clean console tests on Win for PR trigger
{% for editor in clean_console_test_editors %}
    - .yamato/clean-console-test.yml#clean_console_test_win_{{ editor.version }}
{% endfor %}

{% for release in nightly_tested_releases %}
{{release.name}}_nightly_test_trigger:
  name: {{release.branch}} nightly tests Trigger
  triggers:
    recurring:
      - branch: {{release.branch}}
        frequency: daily
        rerun: always
  dependencies:
    - .yamato/upm-ci.yml#pack
    - .yamato/upm-ci.yml#api_doc_validation
    - .yamato/clean-console-test.yml#clean_console_test_trigger
{% for editor in {{release.nightly_editors}} %}
{% for platform in platforms %}
# If use_autodesk_fbx_submodule_for_testing is set, com.unity.formats.fbx package will test against com.autodesk.fbx repo instead of published package.
{% if use_autodesk_fbx_submodule_for_testing %}
    - .yamato/package-test-utr.yml#test_{{ platform.name }}_{{ editor.version }}_using_autodesk_fbx_submodule
{% else %}
    - .yamato/upm-ci.yml#test_{{ platform.name }}_{{ editor.version }}
{% endif %}
{% endfor %}
{% endfor %}
{% endfor %}

publish_test_trigger:
  name: Publish Tests Trigger
  triggers:
    tags:
      only:
        - /^(r|R)(c|C)-\d+\.\d+\.\d+(-preview(\.\d+)?)?
  dependencies:
    - .yamato/upm-ci.yml#pack
{% for editor in all_test_editors %}
{% for platform in platforms %}
    - .yamato/upm-ci.yml#test_{{ platform.name }}_{{ editor.version }}
    - .yamato/upm-ci.yml#validate_{{ platform.name }}_{{ editor.version }}
{% endfor %}
{% endfor %}  
      

publish:
  name: Publish to Internal Registry
  agent:
    type: {{ win_platform.type }}
    image: {{ win_platform.image }}
    flavor: {{ win_platform.flavor }}
  variables:
    UPMCI_ENABLE_PACKAGE_SIGNING: 1
  commands:
    - npm install upm-ci-utils@latest -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
    - upm-ci package publish --package-path com.unity.formats.fbx
  triggers:
    tags:
      only:
        - /^(r|R)(c|C)-\d+\.\d+\.\d+(-preview(\.\d+)?)?$/
  artifacts:
    artifacts:
      paths:
        - "upm-ci~/packages/*.tgz"
  dependencies:
    - .yamato/upm-ci.yml#pack
    - .yamato/upm-ci.yml#publish_test_trigger

publish_dry_run:
  name: Publish to Internal Registry (Dry Run)
  agent:
    type: {{ win_platform.type }}
    image: {{ win_platform.image }}
    flavor: {{ win_platform.flavor }}
  variables:
    UPMCI_ENABLE_PACKAGE_SIGNING: 1
  commands:
    - npm install upm-ci-utils@latest -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
    - upm-ci package publish --package-path com.unity.formats.fbx --dry-run
  triggers:
    tags:
      only:
        - /^(r|R)(c|C)-\d+\.\d+\.\d+(-preview(\.\d+)?)?$/
  artifacts:
    artifacts:
      paths:
        - "upm-ci~/packages/*.tgz"
  dependencies:
    - .yamato/upm-ci.yml#pack
    - .yamato/upm-ci.yml#publish_test_trigger
