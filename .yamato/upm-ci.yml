# Nightly trigger editors by release.
#
# When adding a new release version, add a new section
# to nightly_tested_releases for the release
# containing the name with underscores to separate the numbers, 
# the branch name and editors that it should run on.
#
# Make sure all editor versions specified are included in all_test_editors section as well.
#
# Additionally, update the previous release nightly versions if necessary.
# For example, removing trunk from the list of editors for the previous release.

all_test_editors:
  - version: 2020.3
  - version: 2021.3
  - version: 2022.1
  - version: 2022.2
  - version: trunk

test_trigger_editors:
  - version: 2020.3
  - version: 2021.3
  - version: 2022.1
  - version: trunk

publish_trigger_editors:
  - version: 2020.3
  - version: 2021.3
  - version: 2022.1
  - version: trunk
  
nightly_tested_releases:
  - name: release_4_2
    branch: release/4.2
    nightly_editors: 
      - version: 2019.4
      - version: 2020.3
      - version: 2021.3
      - version: 2022.2
      - version: trunk
  - name: release_4_1
    branch: release/4.1
    nightly_editors: 
      - version: 2019.4
      - version: 2020.3
      - version: 2021.3
      - version: 2022.1
  - name: master
    branch: master
    nightly_editors: 
      - version: 2020.3
      - version: 2021.3
      - version: 2022.2
      - version: trunk
  
platforms:
  - name: win
    type: Unity::VM
    image: package-ci/win10:stable
    flavor: b1.medium
  - name: mac
    type: Unity::VM::osx
    image: package-ci/mac:stable
    flavor: b1.medium
  - name: ubuntu
    type: Unity::VM
    image: package-ci/ubuntu:stable
    flavor: b1.medium
coverage:
    minPercent: 57.5
---
pack:
  name: Pack
  agent:
    type: Unity::VM
    image: package-ci/ubuntu:stable
    flavor: b1.small
  commands:
    - ./build.sh
    - npm install -g upm-ci-utils@stable --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
    - upm-ci package pack --package-path com.unity.formats.fbx
  artifacts:
   packages:
     paths:
       - "upm-ci~/**/*"

# The following job runs PVP API docs validation to validate all public APIs (classes and methods) have documentation.
# For APIs which are exempted from API docs validartion, they are put in pvp_exemptions.json
api_doc_validation:
  name: API documentation validation
  agent:
    type: Unity::VM
    image: package-ci/ubuntu:stable
    flavor: b1.medium
  variables:
    UPM_REGISTRY: https://artifactory-slo.bf.unity3d.com/artifactory/api/npm/upm-candidates
  commands:
    # Needed for now, until we get a recent upm-pvp into the image.
    - sudo apt-get update && sudo apt-get install -y upm-pvp
    # Download Unity.
    - unity-downloader-cli --fast --wait -u {{ all_test_editors[0].version }} -c editor
    # Run PVS in PVP mode.
    - upm-pvp test --unity .Editor --packages "upm-ci~/packages/*.tgz" --results "upm-ci~/pvp"
    # Require that PVP-20-1 (API docs validation) passed
    - upm-pvp require PVP-20-1 --results "upm-ci~/pvp" --failures "upm-ci~/pvp/failures.json"
  artifacts:
    pvp:
      paths:
        - upm-ci~/pvp/**
    logs:
      paths:
        - upm-ci~/test-results/**
  dependencies:
    - .yamato/upm-ci.yml#pack


{% for editor in all_test_editors %}
{% for platform in platforms %}
test_{{ platform.name }}_{{ editor.version }}:
  name : Test version {{ editor.version }} on {{ platform.name }}
  agent:
    type: {{ platform.type }}
    image: {{ platform.image }}
    flavor: {{ platform.flavor}}
  commands:
    - npm install -g upm-ci-utils@stable --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
    - upm-ci package test --extra-create-project-arg="-upmNoDefaultPackages" --unity-version {{ editor.version }} --package-path com.unity.formats.fbx --enable-code-coverage --code-coverage-options 'generateHtmlReport;assemblyFilters:+Unity.Formats.Fbx.Editor,+Unity.Formats.Fbx.Runtime'
{% if platform.name != "ubuntu" %}
    - python tests/yamato/check_coverage_percent.py upm-ci~/test-results/ {{ coverage.minPercent }}
{% endif %}
  artifacts:
    logs:
      paths:
        - "upm-ci~/test-results/**/*"
    packages:
      paths:
        - "upm-ci~/packages/**/*"
  dependencies:
    - .yamato/upm-ci.yml#pack

validate_{{ platform.name }}_{{ editor.version }}:
  name : Validate version {{ editor.version }} on {{ platform.name }}
  agent:
    type: {{ platform.type }}
    image: {{ platform.image }}
    flavor: {{ platform.flavor}}
  commands:
    - npm install -g upm-ci-utils@stable --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
    - upm-ci package test --unity-version {{ editor.version }} --type vetting-tests --platform editmode --package-path com.unity.formats.fbx
  artifacts:
    logs:
      paths:
        - "upm-ci~/test-results/**/*"
    packages:
      paths:
        - "upm-ci~/packages/**/*"
  dependencies:
    - .yamato/upm-ci.yml#pack
{% endfor %}
{% endfor %}

# The following job runs the tests to validate the the public API files are up to date.
# We can't use upm-ci for those as it would pack fbx, making its files read-only, but those
# tests need read/write access.
test_api_win:
  name : Test formating and API on win
  agent:
    type: Unity::VM
    image: package-ci/win10:stable
    flavor: b1.medium
  commands:
    - git clone git@github.cds.internal.unity3d.com:unity/utr.git utr
    - gsudo choco source add -n Unity -s https://artifactory.prd.it.unity3d.com/artifactory/api/nuget/unity-choco-local
    - gsudo choco install unity-config
    - unity-config project set registry candidates --project-path TestProjects/fbx-api-tests
    - unity-downloader-cli -u {{ all_test_editors[2].version }} -c Editor
    - utr/utr.bat --suite=editor --editor-location=.Editor --testproject=TestProjects/fbx-api-tests --artifacts_path=artifacts --reruncount=0
  artifacts:
    logs:
      paths:
      - "upm-ci~/test-results/**/*"

test_trigger:
  name: Tests Trigger
  triggers:
    branches:
      only:
        - "/.*/"
      except:
        - master
  dependencies:
    - .yamato/upm-ci.yml#pack
    - .yamato/upm-ci.yml#api_doc_validation
    - .yamato/upm-ci.yml#test_api_win
{% for editor in test_trigger_editors %}
{% for platform in platforms %}
    - .yamato/upm-ci.yml#test_{{platform.name}}_{{editor.version}}
{% endfor %}
{% endfor %}

{% for release in nightly_tested_releases %}
{{release.name}}_nightly_test_trigger:
  name: {{release.branch}} nightly tests Trigger
  triggers:
    recurring:
      - branch: {{release.branch}}
        frequency: daily
        rerun: always
  dependencies:
    - .yamato/upm-ci.yml#pack
    - .yamato/upm-ci.yml#api_doc_validation
      {% for editor in {{release.nightly_editors}} %}
      {% for platform in platforms %}
    - .yamato/upm-ci.yml#test_{{platform.name}}_{{editor.version}}
      {% endfor %}
      {% endfor %}
{% endfor %}

publish_test_trigger:
  name: Publish Tests Trigger
  triggers:
    tags:
      only:
        - /^(r|R)(c|C)-\d+\.\d+\.\d+(-preview(\.\d+)?)?
  dependencies:
    - .yamato/upm-ci.yml#pack
{% for editor in publish_trigger_editors %}
{% for platform in platforms %}
    - .yamato/upm-ci.yml#test_{{platform.name}}_{{editor.version}}
    - .yamato/upm-ci.yml#validate_{{platform.name}}_{{editor.version}}
{% endfor %}
{% endfor %}  
      

publish:
  name: Publish to Internal Registry
  agent:
    type: Unity::VM
    image: package-ci/win10:stable
    flavor: b1.small
  variables:
    UPMCI_ENABLE_PACKAGE_SIGNING: 1
  commands:
    - npm install upm-ci-utils@latest -g --registry https://artifactory.prd.cds.internal.unity3d.com/artifactory/api/npm/upm-npm
    - upm-ci package publish --package-path com.unity.formats.fbx
  triggers:
    tags:
      only:
        - /^(r|R)(c|C)-\d+\.\d+\.\d+(-preview(\.\d+)?)?$/
  artifacts:
    artifacts:
      paths:
        - "upm-ci~/packages/*.tgz"
  dependencies:
    - .yamato/upm-ci.yml#pack
    - .yamato/upm-ci.yml#test_trigger
    - .yamato/upm-ci.yml#publish_test_trigger